apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-mysql-deploy"
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    component: "{{ .Release.Name }}-mysql-deploy"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: "mysql-{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: "mysql-{{ .Release.Name }}"
    spec:
      containers:
      - name: mysql
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 3306
          hostPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MYSQL_DATABASE
          value: "favorites"
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-volume
        - mountPath: /etc/mysql/
          name: "{{ .Release.Name }}-mysql-conf"
      volumes:
      - name: mysql-volume
        hostPath:
          path: {{ .Values.storage.hostPath }}
      - name: "{{ .Release.Name }}-mysql-conf"
        configMap:
          name: "{{ .Release.Name }}-mysql-conf"
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 9 }}
{{- end }}
